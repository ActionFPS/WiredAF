- name: Set up af user
  user:
    name: af


- name: checkout repo
  git: repo=https://github.com/ScalaWilliam/ActionFPS.git version=master dest=/home/af/repo
  become: yes
  become_user: af
  register: git_checkout

- name: compile artifacts
  become: yes
  become_user: af
  shell: sbt 'show web/stage'
  register: new_artifact
  args:
    chdir: /home/af/repo
  when: git_checkout.changed

- name: copy systemd service template configuration
  template: >
    src=af-web.service.j2
    dest=/etc/systemd/system/af-web.service
    mode=0755
  register: af_web_unit

- name: reload systemd daemon
  systemd:
    name: af-web
    daemon_reload: yes
  when: af_web_unit.changed

- name: Make sure we can use libsemanage-python module
  yum: "pkg=libsemanage-python state=installed"

- seboolean:
    name: httpd_can_network_connect
    state: yes
    persistent: yes

- name: restart and enable the service
  systemd:
    name: af-web
    state: restarted
    enabled: yes
  when: af_web_unit.changed or (new_artifact is defined and new_artifact.changed)

- name: ensure service is started
  systemd:
    name: af-web
    state: started

- name: copy nginx service configuration
  template: >
    src=af-web.nginx.conf.j2
    dest=/etc/nginx/conf.d/af.conf
    mode=0755
  register: af_web_nginx

- name: reload nginx
  systemd:
    name: nginx
    state: reloaded
  when: af_web_nginx.changed

- firewalld:
    port: 81/tcp
    permanent: true
    state: enabled

# - action: uri url=http://localhost:9000/version/ return_content=yes
#   register: webpage

# - fail: msg='service is not running'
#   when: "'description' not in webpage.content"
